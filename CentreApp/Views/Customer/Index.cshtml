
@{
    ViewData["Title"] = "Клиенты";
    var DropDownList = new Syncfusion.EJ2.DropDowns.DropDownList() { AllowFiltering = true, PopupHeight = "200px", Placeholder = "Выберите", ShowClearButton = true };

}

<div class="h3" style="margin:40px 40px 20px 40px">Клиенты</div>

<div class="control-section m-1">
    <div class="control-wrapper">
        <ejs-grid id="Grid" locale="ru-RU" actionComplete="actioncomp" actionFailure="actionfail" allowFiltering="true"  allowResizing="true" allowSorting="true" height="500" allowPaging="true" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update"})">
            <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Normal" showDeleteConfirmDialog="true"></e-grid-editSettings>
            <e-grid-pageSettings pageCount="7" pageSize="50"></e-grid-pageSettings>

            <e-data-manager url="/Customer/Setting" insertUrl="/Customer/Insert" updateUrl="/Customer/Update" removeUrl="/Customer/Delete" adaptor="UrlAdaptor"></e-data-manager>
            <e-grid-columns>
                <e-grid-column field="Id" type="number" visible="false" headerTextAlign="Center" defaultValue="0" isPrimaryKey="true" isIdentity="true" headerText="ID"></e-grid-column>
                <e-grid-column field="Name" headerText="Имя клиента" minWidth="50" customAttributes=@(new { @class="orientationcss" } ) headerTextAlign="Center" validationRules="@(new { required=true})"></e-grid-column>
                <e-grid-column field="Address" minWidth="50" headerText="Адрес" customAttributes=@(new { @class="orientationcss" } ) headerTextAlign="Center" textAlign="Left"></e-grid-column>
                <e-grid-column field="Email" minWidth="50" headerText="Почта" customAttributes=@(new { @class="orientationcss" } ) headerTextAlign="Center" textAlign="Left"></e-grid-column>
                <e-grid-column field="GeoLatitude" visible="false" minWidth="50" headerText="GeoLatitude" customAttributes=@(new { @class="orientationcss" } ) headerTextAlign="Center" textAlign="Left"></e-grid-column>
                <e-grid-column field="GeoLongitude" visible="false" minWidth="50" headerText="GeoLatitude" customAttributes=@(new { @class="orientationcss" } ) headerTextAlign="Center" textAlign="Left"></e-grid-column>
                <e-grid-column field="GeoAltitude" visible="false" minWidth="50" headerText="GeoAltitude" customAttributes=@(new { @class="orientationcss" } ) headerTextAlign="Center" textAlign="Left"></e-grid-column>
                <e-grid-column field="PhoneNumber" headerText="Тел номер" minWidth="50" customAttributes=@(new { @class="orientationcss" } ) headerTextAlign="Center" textAlign="Left"></e-grid-column>
                <e-grid-column field="CustomerTypeId" defaultValue="null" headerText="Тип клиента" dataSource="@(new Syncfusion.EJ2.DataManager() { Url = "/CustomerType/ForDropDown", Adaptor = "UrlAdaptor"})" foreignKeyField="Id" foreignKeyValue="Name" edit="new {@params = DropDownList} " editType="dropdownedit" minWidth="50" customAttributes=@(new { @class="orientationcss" } ) headerTextAlign="Center" textAlign="Left">

                </e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>
</div>
@section Scripts{
    <partial name="~/Views/Partials/NotifyView.cshtml" />

    <script type="text/javascript">
        var toastObj;
        var toasts = [
            { title: 'Предупреждение!', content: 'There was a problem with your network connection.', cssClass: 'e-toast-warning', icon: 'e-warning toast-icons' },
            { title: 'Успех!', content: 'Успешно Сохранено!', cssClass: 'e-toast-success', icon: 'e-success toast-icons' },
            { title: 'Ошибка!', content: 'Произошло ошибка со стороны сервера', cssClass: 'e-toast-danger', icon: 'e-error toast-icons' },
            { title: 'Информация!', content: 'Please read the comments carefully.', cssClass: 'e-toast-info', icon: 'e-info toast-icons' }];

        setTimeout(
            () => {

            }, 800);
        function creatednotify() {
            toastObj = this;
        }
        function actioncomp(args) {
            if (args.requestType == "save")
                toastObj.show(toasts[1]);
        }
        function actionfail(args) {
            toastObj.show(toasts[2]);
        }


    </script>
    <style>
        .orientationcss .e-headercelldiv {
            position: relative;
            color: black;
            font-size: 16px;
        }
    </style>

}

